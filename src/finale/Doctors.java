/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finale;

import java.awt.Button;
import java.awt.Color;
import java.awt.Label;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohamed
 */
public class Doctors extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Graduated_Students
     */
    DefaultTableModel Gmodel;
    Connection Gcon;
    Statement Gstmt;
    ResultSet Grs;
    Button G_IB = new Button("Insert");
    Button G_UB = new Button("Update");
    Button G_SB = new Button("Search");
    Button G_DB = new Button("Delete");
    Button D_Phone = new Button("Phones");
    Button FBack = new Button("Back");
    Button RB = new Button("Refresh");
    Button Q = new Button("Qualifications");
    TextField D_EFNF = new TextField();
    TextField D_FNameF = new TextField();
    TextField D_LNameF = new TextField();
    TextField D_NIDF = new TextField();
    TextField D_SalaryF = new TextField();
    Label label1 = new Label("Electronic File Number");
    Label label2 = new Label("First Name");
    Label label3 = new Label("Last Name");
    Label label4 = new Label("National ID");
    Label label5 = new Label("Salary");

    public Doctors() {
        setTitle("Doctors");
        initComponents();
        GcontoSQL();
        //  B u t t o n s 
        G_IB.addActionListener(this);
        G_UB.addActionListener(this);
        G_DB.addActionListener(this);
        G_SB.addActionListener(this);
        D_Phone.addActionListener(this);
        FBack.addActionListener(this);
        Q.addActionListener(this);
        RB.addActionListener(this);
        G_IB.setBackground(Color.YELLOW);
        G_UB.setBackground(Color.YELLOW);
        G_DB.setBackground(Color.YELLOW);
        RB.setBackground(Color.YELLOW);
        G_SB.setBackground(Color.YELLOW);
        D_Phone.setBackground(Color.GREEN);
        FBack.setBackground(Color.RED);
        Q.setBackground(Color.GREEN);
        G_IB.setBounds(700, 415, 73, 29);
        add(G_IB);
        G_UB.setBounds(800, 415, 73, 29);
        add(G_UB);
        G_DB.setBounds(700, 450, 73, 29);
        add(G_DB);
        G_SB.setBounds(800, 450, 73, 29);
        add(G_SB);
        FBack.setBounds(900, 450, 73, 29);
        add(FBack);
        D_Phone.setBounds(900, 415, 73, 29);
        add(D_Phone);
        RB.setBounds(800, 380, 73, 29);
        add(RB);
        Q.setBounds(890, 380, 83, 29);
        add(Q);

        //End
        //Text Field
        D_EFNF.setBounds(40, 440, 90, 40);
        add(D_EFNF);
        D_FNameF.setBounds(150, 440, 90, 40);
        add(D_FNameF);
        D_LNameF.setBounds(260, 440, 90, 40);
        add(D_LNameF);
        D_NIDF.setBounds(370, 440, 90, 40);
        add(D_NIDF);
        D_SalaryF.setBounds(480, 440, 90, 40);
        add(D_SalaryF);
        //End
        label1.setBounds(25, 410, 140, 40);
        add(label1);
        label2.setBounds(165, 410, 90, 40);
        add(label2);
        label3.setBounds(260, 410, 90, 40);
        add(label3);
        label4.setBounds(370, 410, 120, 40);
        add(label4);
        label5.setBounds(500, 410, 90, 40);
        add(label5);
        //END
    }

    public void GcontoSQL() {
        Gmodel = new DefaultTableModel();
        Gmodel.addColumn("Electronic File Number");
        Gmodel.addColumn("First Name");
        Gmodel.addColumn("Last Name");
        Gmodel.addColumn("National ID");
        Gmodel.addColumn("Salary");
        G_ST.setModel(Gmodel);

        String path = "jdbc:sqlserver://localhost:1433;databaseName=bb;encrypt=true;trustServerCertificate=true;";
        String user = "jazz";
        String pass = "123";

        try {
            Gcon = DriverManager.getConnection(path, user, pass);
            Gstmt = Gcon.createStatement();
            Grs = Gstmt.executeQuery("select * from Doctors");

            while (Grs.next()) {
                Gmodel.addRow(new Object[]{Grs.getInt("D_EFN"), Grs.getString("D_FName"), Grs.getString("D_LName"), Grs.getInt("D_NID"), Grs.getInt("D_Salary")});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        G_ST = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        G_ST.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(G_ST);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 130, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable G_ST;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == FBack) {
            Home m = new Home();
            m.show();
            dispose();
        }
        if (e.getSource() == D_Phone) {
            dispose();
            D_Phone Sp1 = new D_Phone();
            Sp1.show();
        }
        if (e.getSource() == Q) {
            dispose();
            D_Q S = new D_Q();
            S.show();
        }
        if (e.getSource() == RB) {
            GcontoSQL();
        }

        if (e.getSource() == G_IB) {
            int D_EFN = Integer.parseInt(D_EFNF.getText());
            String D_FName = D_FNameF.getText();
            String D_LName = D_LNameF.getText();
            int D_NID = Integer.parseInt(D_NIDF.getText());
            int D_Salary = Integer.parseInt(D_SalaryF.getText());

            String IGQuery = "insert into Doctors values(" + D_EFN + ",'" + D_FName + "','" + D_LName + "'," + D_NID + "," + D_Salary + ")";

            try {
                Gstmt.executeUpdate(IGQuery);
                GcontoSQL();
            } catch (SQLException ea) {
                JOptionPane.showMessageDialog(this, ea.getMessage());
            }
        }
        if (e.getSource() == G_UB) {
            int D_EFN = Integer.parseInt(D_EFNF.getText());
            String D_FName = D_FNameF.getText();
            String D_LName = D_LNameF.getText();
            int D_NID = Integer.parseInt(D_NIDF.getText());
            int D_Salary = Integer.parseInt(D_SalaryF.getText());

            String UGQuery = "update Doctors set D_FName ='" + D_FName + "', D_LName='" + D_LName + "', D_NID=" + D_NID + ", D_Salary=" + D_Salary + " where D_EFN =" + D_EFN;

            try {
                Gstmt.executeUpdate(UGQuery);
            } catch (SQLException ea) {
                JOptionPane.showMessageDialog(this, ea.getMessage());
            }
            GcontoSQL();
        }
        if (e.getSource() == G_DB) {
            int D_EFN = Integer.parseInt(D_EFNF.getText());
            String DGQuery2 = "delete from D_Q where D_EFN2 = " + D_EFN;
            String DGQuery = "delete from D_Phone where D_EFN1 = " + D_EFN;
            String DGQuery1 = "update Nurses set D_EFN3=NULL where D_EFN3 =" + D_EFN;
            String DGQuery3 = "update Donors set D_EFN4=NULL where D_EFN4 =" + D_EFN;
            String DGQuery4 = "delete from Doctors where D_EFN =" + D_EFN;
            try {
                Gstmt.executeUpdate(DGQuery2);
                Gstmt.executeUpdate(DGQuery);
                Gstmt.executeUpdate(DGQuery1);
                Gstmt.executeUpdate(DGQuery3);
                Gstmt.executeUpdate(DGQuery4);
            } catch (SQLException ea) {
                JOptionPane.showMessageDialog(this, ea.getMessage());
            }
            GcontoSQL();
        }
        if (e.getSource() == G_SB) {
            int D_EFN = Integer.parseInt(D_EFNF.getText());
            Gmodel = new DefaultTableModel();
            Gmodel.addColumn("Electronic File Number");
            Gmodel.addColumn("First Name");
            Gmodel.addColumn("Last Name");
            Gmodel.addColumn("National ID");
            Gmodel.addColumn("Salary");
            G_ST.setModel(Gmodel);

            String path = "jdbc:sqlserver://localhost:1433;databaseName=bb;encrypt=true;trustServerCertificate=true;";
            String user = "jazz";
            String pass = "123";

            try {
                Gcon = DriverManager.getConnection(path, user, pass);
                Gstmt = Gcon.createStatement();
                Grs = Gstmt.executeQuery("select * from Doctors where D_EFN =" + D_EFN);

                while (Grs.next()) {
                    Gmodel.addRow(new Object[]{Grs.getInt("D_EFN"), Grs.getString("D_FName"), Grs.getString("D_LName"), Grs.getInt("D_NID"), Grs.getInt("D_Salary")});
                }
            } catch (SQLException ea) {
                JOptionPane.showMessageDialog(this, ea.getMessage());
            }

        }

    }
}
